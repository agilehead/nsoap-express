{"version":3,"sources":["../../src/test/test.js"],"names":["routes","index","about","static","unary","arg","binary","x","y","namespace","nested","json","input","throw","a","Error","chainAdder1","chainAdder2","infer","_bool","_num","_str","promiseToAdd","Promise","resolve","functionOnPromise","adder","z","defaultFunction","app","use","urlencoded","extended","describe","it","resp","get","text","should","equal","body","status","error","not","be","empty","post","send","obj"],"mappings":"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","file":"test.js","sourcesContent":["import nsoap from \"../nsoap-express\";\nimport should from \"should\";\nimport express from \"express\";\nimport request from \"supertest\";\nimport bodyParser from \"body-parser\";\n\nconst routes = {\n  index() {\n    return \"Home page!\";\n  },\n  about() {\n    return \"NSOAP Test Suite\";\n  },\n  static: \"NSOAP Static File\",\n  unary(arg) {\n    return arg + 10;\n  },\n  binary(x, y) {\n    return x + y;\n  },\n  namespace: {\n    binary(x, y) {\n      return x + y;\n    }\n  },\n  nested: {\n    namespace: {\n      binary(x, y) {\n        return x + y;\n      }\n    }\n  },\n  json(input) {\n    return input.x + 20;\n  },\n  throw(a) {\n    throw new Error(\"Exception!\");\n  },\n  chainAdder1(x) {\n    return {\n      chainAdder2(y) {\n        return x + y;\n      }\n    };\n  },\n  infer(_bool, _num, _str) {\n    return {\n      _bool,\n      _num,\n      _str\n    };\n  },\n  promiseToAdd(x, y) {\n    return Promise.resolve(x + y);\n  },\n  functionOnPromise(x, y) {\n    return Promise.resolve({\n      adder(z) {\n        return x + y + z;\n      }\n    });\n  },\n  defaultFunction(x, y) {\n    return {\n      index() {\n        return x + y;\n      }\n    };\n  }\n};\n\nconst app = express();\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.use(nsoap(routes));\n\n//app.get(\"/about\", (req, res) => res.send(\"Hello\"))\n\ndescribe(\"NSOAP Express\", () => {\n  it(\"Calls a parameter-less function\", async () => {\n    const resp = await request(app).get(\"/about\");\n    resp.text.should.equal(\"NSOAP Test Suite\");\n  });\n\n  it(\"Gets the value of a property\", async () => {\n    const resp = await request(app).get(\"/static\");\n    resp.text.should.equal(\"NSOAP Static File\");\n  });\n\n  it(\"Calls a unary function\", async () => {\n    const resp = await request(app).get(\"/unary(10)\");\n    resp.body.should.equal(20);\n  });\n\n  it(\"Throws an exception\", async () => {\n    const resp = await request(app).get(\"/throw(10)\");\n    resp.status.should.equal(400);\n    resp.error.should.not.be.empty();\n  });\n\n  it(\"Calls a binary function\", async () => {\n    const resp = await request(app).get(\"/binary(10,20)\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Calls a unary function with variables\", async () => {\n    const resp = await request(app).get(\"/unary(x)?x=20\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Calls a binary function with variables\", async () => {\n    const resp = await request(app).get(\"/binary(x,y)?x=10&y=20\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Calls a binary function with literals and variables\", async () => {\n    const resp = await request(app).get(\"/binary(x,20)?x=10\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Calls a binary function in a namespace\", async () => {\n    const resp = await request(app).get(\"/namespace.binary(10,20)\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Calls a binary function in a nested namespace\", async () => {\n    const resp = await request(app).get(\"/nested.namespace.binary(10,20)\");\n    resp.body.should.equal(30);\n  });\n\n  // it(\"Accepts stringified JSON arguments in querystring\", async () => {\n  //   const data = JSON.stringify({ obj: { x: 10 } });\n  //   const resp = await request(app).post(\"/json(obj)\").send(data);\n  //   resp.body.should.equal(30);\n  // });\n\n  it(\"Accepts JSON arguments in body\", async () => {\n    const resp = await request(app).post(\"/json(obj)\").send({ obj: { x: 10 } });\n    resp.body.should.equal(30);\n  });\n\n  it(\"Adds parenthesis if omitted\", async () => {\n    const resp = await request(app).get(\"/about\");\n    resp.text.should.equal(\"NSOAP Test Suite\");\n  });\n\n  it(\"Calls the default function\", async () => {\n    const resp = await request(app).get(\"/\");\n    resp.text.should.equal(\"Home page!\");\n  });\n\n  it(\"Calls chained functions\", async () => {\n    const resp = await request(app).get(\"/chainAdder1(10).chainAdder2(20)\");\n    resp.body.should.equal(30);\n  });\n\n  it(\"Infers types\", async () => {\n    const resp = await request(app).get(\"/infer(true, 20, Hello)\");\n    resp.body._bool.should.equal(true);\n    resp.body._num.should.equal(20);\n    resp.body._str.should.equal(\"Hello\");\n  });\n  //\n  // it(\"Is Case-sensitive\", async () => {\n  //   const handler = getMockHandler();\n  //   await nsoap(app, \"unary(x)\", [{ X: 100, x: 10 }], {}, handler.then);\n  //   handler.getResult().should.equal(20);\n  // });\n  //\n  // it(\"Resolves a Promise\", async () => {\n  //   const handler = getMockHandler();\n  //   await nsoap(\n  //     app,\n  //     \"promiseToAdd(x,y)\",\n  //     [{ x: 10, y: 20 }],\n  //     {},\n  //     handler.then\n  //   );\n  //   handler.getResult().should.equal(30);\n  // });\n  //\n  // it(\"Calls a function on the resolved value of a Promise\", async () => {\n  //   const handler = getMockHandler();\n  //   await nsoap(\n  //     app,\n  //     \"functionOnPromise(x,y).adder(100)\",\n  //     [{ x: 10, y: 20 }],\n  //     {},\n  //     handler.then\n  //   );\n  //   handler.getResult().should.equal(130);\n  // });\n  //\n  // it(\"Calls default function on object\", async () => {\n  //   const handler = getMockHandler();\n  //   await nsoap(app, \"defaultFunction(10,20)\", [], { index: \"index\" }, handler.then);\n  //   handler.getResult().should.equal(30);\n  // });\n});\n"]}